Normal
======
>>> text_indentation = __import__('5-text_indentation').text_indentation

>>> text_indentation("""Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quonam modo? Utrum igitur tibi litteram videor an totas paginas commovere? Non autem hoc: igitur ne illud quidem. Fortasse id optimum, sed ubi illud: Plus semper voluptatis? Teneo, inquit, finem illi videri nihil dolere. Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum rationi oboediens. Si id dicis, vicimus. Inde sermone vario sex illa a Dipylo stadia confecimus. Sin aliud quid voles, postea. Quae animi affectio suum cuique tribuens atque hanc, quam dico. Utinam quidem dicerent alium alio beatiorem! Iam ruinas videres""")
Lorem ipsum dolor sit amet, consectetur adipiscing elit.
<BLANKLINE>
Quonam modo?
<BLANKLINE>
Utrum igitur tibi litteram videor an totas paginas commovere?
<BLANKLINE>
Non autem hoc:
<BLANKLINE>
igitur ne illud quidem.
<BLANKLINE>
Fortasse id optimum, sed ubi illud:
<BLANKLINE>
Plus semper voluptatis?
<BLANKLINE>
Teneo, inquit, finem illi videri nihil dolere.
<BLANKLINE>
Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum rationi oboediens.
<BLANKLINE>
Si id dicis, vicimus.
<BLANKLINE>
Inde sermone vario sex illa a Dipylo stadia confecimus.
<BLANKLINE>
Sin aliud quid voles, postea.
<BLANKLINE>
Quae animi affectio suum cuique tribuens atque hanc, quam dico.
<BLANKLINE>
Utinam quidem dicerent alium alio beatiorem! Iam ruinas videres

>>> text_indentation("Test test test test test:\nDone.")
Test test test test test:
<BLANKLINE>
<BLANKLINE>
Done.
<BLANKLINE>

>>> text_indentation("\n\n\n Test test test.")
<BLANKLINE>
<BLANKLINE>
<BLANKLINE>
Test test test.
<BLANKLINE>

>>> text_indentation("Let's try \n this test.")
Let's try 
this test.
<BLANKLINE>

Non-String
==========
`text_indentation()` raises a TypeError exception if `text` isn't a string.

>>> text_indentation(20)
Traceback (most recent call last):
            ...
TypeError: text must be a string

>>> text_indentation(2.5)
Traceback (most recent call last):
            ...
TypeError: text must be a string

>>> text_indentation(1.0)
Traceback (most recent call last):
            ...
TypeError: text must be a string

>>> text_indentation(None)
Traceback (most recent call last):
            ...
TypeError: text must be a string

>>> text_indentation(True)
Traceback (most recent call last):
            ...
TypeError: text must be a string

>>> text_indentation(False)
Traceback (most recent call last):
            ...
TypeError: text must be a string

>>> text_indentation({"Hello": 1, "World": 2})
Traceback (most recent call last):
            ...
TypeError: text must be a string

Other Cases
===========

>>> text_indentation("")

>>> text_indentation(".,:?")
.
<BLANKLINE>
,:
<BLANKLINE>
?
<BLANKLINE>

>>> text_indentation("     ")

>>> text_indentation("Line 1.\nLine 2.")
Line 1.
<BLANKLINE>
<BLANKLINE>
Line 2.
<BLANKLINE>

>>> text_indentation("Line 1. \t Line 2.")
Line 1.
<BLANKLINE>
Line 2.
<BLANKLINE>

>>> text_indentation("Line 1.  \t ")
Line 1.
<BLANKLINE>

>>> text_indentation("This,is,a,test.")
This,is,a,test.
<BLANKLINE>

text_indentation("This...is...a...test.")
This.
<BLANKLINE>
.
<BLANKLINE>
.
<BLANKLINE>
is.
<BLANKLINE>
.
<BLANKLINE>
.
<BLANKLINE>
a.
<BLANKLINE>
.
<BLANKLINE>
.
<BLANKLINE>
test.
<BLANKLINE>

>>> text_indentation(".,:")
.
<BLANKLINE>
,:
<BLANKLINE>

>>> text_indentation("This is a test! No, really?")
This is a test! No, really?
<BLANKLINE>

>>> text_indentation(". This is a test.")
.
<BLANKLINE>
This is a test.
<BLANKLINE>

>>> text_indentation("This is a test.\nAnd another test!")
This is a test.
<BLANKLINE>
<BLANKLINE>
And another test!

>>> text_indentation("This is a test.   Another sentence.")
This is a test.
<BLANKLINE>
Another sentence.
<BLANKLINE>
